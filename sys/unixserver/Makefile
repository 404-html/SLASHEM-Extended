export VCS_DESCRIPTION := $(shell git describe --always)
VERSION := $(shell util/version.sh)

GAME = slashem
GAMEUID = acehack
GAMEGID = acehack
CHOWN = chown $(GAMEUID):$(GAMEGID)

GAMEDIR = /srv/acehack/slex-$(VERSION)
MASTERDIR = /srv/acehack/slexdir

GAMEPERM = 0755
FILEPERM = 0644
EXEPERM  = 0755
DIRPERM  = 0755

CFLAGS = -g -O2
CPPFLAGS += -Iinclude
CPPFLAGS += -DNO_EXPLORE_MODE
CPPFLAGS += -D'WIZARD="$(GAMEUID)"'
CPPFLAGS += -DNO_SUSPEND
CPPFLAGS += -DDLB

.PHONY: all
all: src/$(GAME) util/recover dat/nhshare dat/nhushare

PLAYGROUND_FILES = perm record logfile xlogfile

.PHONY: install
install: all dat/license doc/Guidebook.txt
	-rm $(GAMEDIR)/$(GAME) $(GAMEDIR)/nhshare $(GAMEDIR)/nhushare
	mkdir -p $(GAMEDIR) $(GAMEDIR)/save
	$(CHOWN) $(GAMEDIR) $(GAMEDIR)/save
	chmod $(DIRPERM) $(GAMEDIR) $(GAMEDIR)/save
	-ln $(PLAYGROUND_FILES:%=$(MASTERDIR)/%) $(GAMEDIR)
	( cd $(GAMEDIR) ; \
	  touch $(PLAYGROUND_FILES) ; \
	  $(CHOWN) $(PLAYGROUND_FILES) ; \
	  chmod $(FILEPERM) $(PLAYGROUND_FILES) )
	cp src/$(GAME) $(GAMEDIR)/$(GAME).new
	cp util/recover dat/nhshare dat/nhushare \
           dat/license doc/Guidebook.txt $(GAMEDIR)
	( cd $(GAMEDIR) ; \
	  $(CHOWN) $(GAME).new recover ; \
          $(CHOWN) nhshare nhushare license Guidebook.txt ; \
	  chmod $(GAMEPERM) $(GAME).new ; \
	  chmod $(EXEPERM) recover ; \
	  chmod $(FILEPERM) nhshare nhushare license Guidebook.txt )
	mv $(GAMEDIR)/$(GAME).new $(GAMEDIR)/$(GAME)

##### BINARIES #####

SYSUNIXOBJ = unixmain.o unixres.o unixunix.o
SYSSHAREOBJ = ioctl.o unixtty.o
WINTTYOBJ = getline.o termcap.o topl.o wintty.o
SRCOBJ = allmain.o alloc.o apply.o artifact.o attrib.o ball.o bones.o	\
 botl.o cmd.o dbridge.o decl.o detect.o dig.o display.o dlb.o do.o	\
 do_name.o do_wear.o dog.o dogmove.o dokick.o dothrow.o drawing.o	\
 dungeon.o eat.o end.o engrave.o exper.o explode.o extralev.o files.o	\
 fountain.o gypsy.o hack.o hacklib.o invent.o light.o lock.o mail.o	\
 makemon.o mapglyph.o mcastu.o mhitm.o mhitu.o minion.o mklev.o		\
 mkmap.o mkmaze.o mkobj.o mkroom.o mon.o mondata.o monmove.o monst.o	\
 monstr.o mplayer.o mthrowu.o muse.o music.o o_init.o objects.o		\
 objnam.o options.o pager.o pickup.o pline.o polyself.o potion.o	\
 pray.o priest.o quest.o questpgr.o read.o recover.o rect.o region.o	\
 restore.o rip.o rnd.o role.o rumors.o save.o shk.o shknam.o sit.o	\
 sounds.o sp_lev.o spell.o steal.o steed.o tech.o teleport.o		\
 timeout.o topten.o track.o trap.o u_init.o uhitm.o vault.o version.o	\
 vis_tab.o vision.o weapon.o were.o wield.o windows.o wizard.o worm.o	\
 worn.o write.o zap.o

GAME_O = $(SRCOBJ:%=src/%) $(SYSUNIXOBJ:%=sys/unix/%)		\
         $(SYSSHAREOBJ:%=sys/share/%) $(WINTTYOBJ:%=win/tty/%)
src/$(GAME): $(GAME_O)
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -lncurses -o $@

RECOVER_O = util/recover.o
util/recover: $(RECOVER_O)

MAKEDEFS_O = util/makedefs.o src/alloc.o src/monst.o src/objects.o	\
             util/panic.o
util/makedefs: $(MAKEDEFS_O)

DGN_COMP_O = util/dgn_comp.o util/dgn_main.o util/dgn_lex.o	\
             src/alloc.o util/panic.o
util/dgn_comp: $(DGN_COMP_O)

LEV_COMP_O = util/lev_comp.o util/lev_main.o util/lev_lex.o	\
             src/alloc.o src/decl.o src/drawing.o src/monst.o	\
             src/objects.o util/panic.o
util/lev_comp: $(LEV_COMP_O)

DLB_O = util/dlb.o src/alloc.o src/dlb.o util/panic.o
util/dlb: $(DLB_O)

ALL_O = $(GAME_O) $(RECOVER_O) $(LEV_COMP_O) $(DGN_COMP_O)	\
        $(MAKEDEFS_O) $(DLB_O)

##### AUTOMATIC C DEPENDENCIES #####

%.o: CPPFLAGS += -MMD -MP

%.d: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -MM -MG -MP -MF $@ -MT $*.o $(TARGET_ARCH) $<

ALL_D = $(ALL_O:%.o=%.d)
include $(ALL_D)

##### DATA FILES #####

dat/%.d: dat/%.des
	( cd dat ; ./leveldepend.sh $(<F) > $(@F) )

DAT_DES := $(wildcard dat/*.des)

DAT_D = $(DAT_DES:%.des=%.d)
# this populates SPECIAL_LEVELS
include $(DAT_D)

NHSHARE = cmdhelp data gypsy.txt help hh history opthelp options	\
          oracles quest.dat rumors wizhelp
NHUSHARE = dungeon $(SPECIAL_LEVELS)
dat/nhshare: util/dlb $(NHSHARE:%=dat/%)
	( cd dat ; ../util/dlb cf nhshare $(NHSHARE) )
dat/nhushare: util/dlb $(NHUSHARE:%=dat/%)
	( cd dat ; ../util/dlb cf nhushare $(NHUSHARE) )

DAT_AUTO = data options oracles quest.dat rumors dungeon.pdf dungeon

dat/data: dat/data.base util/makedefs
	( cd util ; ./makedefs -d )
dat/options: include/date.h # util/makedefs
#	( cd util ; ./makedefs -v )
dat/oracles: dat/oracles.txt util/makedefs
	( cd util ; ./makedefs -h )
dat/quest.dat: dat/quest.txt util/makedefs
	( cd util ; ./makedefs -q )
dat/rumors: dat/rumors.tru dat/rumors.fal util/makedefs
	( cd util ; ./makedefs -r )

dat/dungeon.pdf: dat/dungeon.def util/makedefs
	( cd util ; ./makedefs -e )
dat/dungeon: dat/dungeon.pdf util/dgn_comp
	( cd dat ; ../util/dgn_comp dungeon.pdf )

##### AUTOGENERATED CODE #####

AUTO_H = date.h dgn_comp.h filename.h lev_comp.h onames.h pm.h vis_tab.h

# the dependency files can be generated when the headers don't exist
# yet, so they might not know where to place missing header files, so
# we add the appropriate rules here, like date.h: include/date.h
$(AUTO_H): %: include/%

# compile every time if we don't have git
.git/HEAD:
include/date.h: util/makedefs .git/HEAD
	( cd util ; ./makedefs -v )
include/filename.h: util/makedefs
	( cd util ; ./makedefs -f )
include/onames.h: util/makedefs
	( cd util ; ./makedefs -o )
include/pm.h: util/makedefs
	( cd util ; ./makedefs -p )

SRC_AUTO_C = monstr.c vis_tab.c

src/monstr.c: util/makedefs
	( cd util ; ./makedefs -m )
include/vis_tab.h: src/vis_tab.c
src/vis_tab.c: util/makedefs
	( cd util ; ./makedefs -z )

UTIL_AUTO_C = dgn_comp.c dgn_lex.c lev_comp.c lev_lex.c

YACC_COMPS = dgn_comp lev_comp

$(YACC_COMPS:%=include/%.h): include/%.h: util/%.c
$(YACC_COMPS:%=util/%.c): util/%.c: util/%.y
	bison $(YFLAGS) --output=util/$*.c --defines=include/$*.h $<

##### SPECIAL CASES #####

src/recover.c: util/recover.c
	ln -sf ../util/recover.c src/recover.c
src/recover.d: CPPFLAGS += -DNO_MAIN
src/recover.o: CPPFLAGS += -DNO_MAIN

##### CLEANING UP #####

.PHONY: clean
clean:
	rm -f src/$(GAME) util/recover util/makedefs
	rm -f util/dgn_comp util/lev_comp util/dlb

	rm -f $(ALL_O)

	rm -f dat/nhshare dat/nhushare
	rm -f $(DAT_AUTO:%=dat/%)
	rm -f $(SPECIAL_LEVELS:%=dat/%)

	rm -f $(AUTO_H:%=include/%)
	rm -f $(SRC_AUTO_C:%=src/%)
	rm -f $(UTIL_AUTO_C:%=util/%)
	rm -f src/recover.c

.PHONY: cleandeps
cleandeps: clean
	rm -f $(ALL_D)
	rm -f $(DAT_D)
